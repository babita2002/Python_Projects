This code will generate a random password of the given length, including the given types of characters. It will also display the strength of the password to the user.

import random
import string

def generate_password(length, types_of_characters):
  """Generates a random password of the given length, including the given types of characters.

  Args:
    length: The length of the password.
    types_of_characters: A list of the types of characters to include in the password.

  Returns:
    A random password of the given length, including the given types of characters.
  """

  password = ""
  for i in range(length):
    character_type = random.choice(types_of_characters)
    if character_type == "upper_letter":
      character = random.choice(string.ascii_uppercase)
    elif character_type == "lower_letter":
      character = random.choice(string.ascii_lowercase)
    elif character_type == "digit":
      character = random.choice(string.digits)
    elif character_type == "symbol":
      character = random.choice(string.punctuation)
    else:
      raise ValueError("Invalid character type: {}".format(character_type))
    password += character
  return password

def get_types_of_characters_from_user():
  """Gets the types of characters to include in the password from the user.

  Returns:
    A list of the types of characters to include in the password.
  """

  types_of_characters = []
  while True:
    print("Choose the types of characters to include in the password:")
    print("1. Upper letters")
    print("2. Lower letters")
    print("3. Digits")
    print("4. Symbols")
    print("5. All of the above")

    choice = int(input("Enter your choice: "))
    if choice == 1:
      types_of_characters.append("upper_letter")
    elif choice == 2:
      types_of_characters.append("lower_letter")
    elif choice == 3:
      types_of_characters.append("digit")
    elif choice == 4:
      types_of_characters.append("symbol")
    elif choice == 5:
      types_of_characters = ["upper_letter", "lower_letter", "digit", "symbol"]
      break
    else:
      print("Invalid choice.")

  return types_of_characters

def get_password_strength(password):
  """Gets the strength of the given password.

  Args:
    password: The password to check the strength of.

  Returns:
    A string indicating the strength of the password ("weak", "medium", or "strong").
  """

  if len(password) < 12:
    return "weak"
  elif len(password) < 16:
    return "medium"
  else:
    return "strong"

def main():
  """The main function."""

  # Get the desired password length from the user.
  password_length = int(input("Enter the desired password length: "))

  # Get the types of characters to include in the password from the user.
  types_of_characters = get_types_of_characters_from_user()

  # Generate a random password.
  password = generate_password(password_length, types_of_characters)

  # Display the generated password to the user.
  print("Your generated password is:", password)

  # Get the strength of the password.
  password_strength = get_password_strength(password)

  # Display the password strength to the user.
  print("Password strength:", password_strength)

if __name__ == "__main__":
  main()
